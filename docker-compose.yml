#docker-compose.yml
version: "3.7"

services:
  postgres_db:
    image: postgres:alpine
    container_name: postgres
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    restart: always
    ports:
      - "5434:${DB_PORT}"
    volumes:
      - ./postgresql_db/db/:/var/lib/postgresql_db/data/
      - ./postgresql_db/db/:/logs/
    command: ["postgres", "-c", "log_destination=stderr"]
#    command: ["postgres", "-c", "log_statement=all"] # команда запуска БД с полным логом
    expose:
      - 5434
    networks:
      bakery_vk_api_bot_network:
        ipv4_address: 192.168.55.4

  app:
    build:
      dockerfile: DockerfileFastAPI
    container_name: fastapi
    stop_signal: SIGKILL
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      - postgres_db
    networks:
      bakery_vk_api_bot_network:
        ipv4_address: 192.168.55.5

  vk_api_bot:
    build:
      context: .
      dockerfile: vk_api_bot/DockerfileVK_API
    container_name: vk_api_bot
    stop_signal: SIGKILL
    restart: always
    depends_on:
      - app
    networks:
      bakery_vk_api_bot_network:
        ipv4_address: 192.168.55.6

networks:
  bakery_vk_api_bot_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.55.0/24
          gateway: 192.168.55.1
